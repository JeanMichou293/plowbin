#!/bin/bash

min_size=100
max_size=1000
loops=10

# Path for saving files generated by instrumentation
dataset_path="./dataset"

# COLOPOWAAAA
GREEN="\033[1;32m"
NC="\033[0;0m"

# Generate random number of 32-bit words
_rand_input(){
	size=$((RANDOM % (max_size - min_size + 1) + min_size))
	dd if=/dev/urandom count=$size bs=4 2>/dev/null | tr "\0" "\1"
}

# Main
file="$1"
category="$2"
index="$3"
for ((i=0;i<loops;i++)); do
	j=$((i + index*loop))
	input=`_rand_input`
	#echo -n $input | xxd
	
	# Call callgrind (execution trace)
	echo -e "${GREEN}>Calling callgrind... ($((i+1))/$loops)${NC}"
	echo -n $input | valgrind --tool=callgrind --callgrind-out-file=${file}.$i-call.out $file &>/dev/null
	
	echo -e "${GREEN} Converting trace to DOT...${NC}"
	dot_file="${dataset_path}/${category}/call/${j}.dot"
	python3 ./gprof2dot.py -f callgrind ${file}.$i-call.out > $dot_file
	
	echo -e "${GREEN} Converting DOT to AM...${NC}"
	am_file="${dataset_path}/${category}/call/${j}.am"
    python3 ./dot2am.py "call" $dot_file $am_file
	
	#dot -Tpng ${file}.$i.dot > ${file}.$i.png
	
	# Call cologrind (memory access)
	echo -e "${GREEN}>Calling cologrind... ($((i+1))/$loops)${NC}"
	dot_file="${dataset_path}/${category}/colo/${j}.dot"
	echo -n $input | valgrind --tool=cologrind --cologrind-out-file="$dot_file" $file &>/dev/null
	
	echo -e "${GREEN} Converting DOT to AM...${NC}"
	am_file="${dataset_path}/${category}/colo/${j}.am"
	python3 ./dot2am.py "colo" $dot_file $am_file
done